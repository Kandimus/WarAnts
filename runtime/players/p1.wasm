%core "0100"
% name "Black stupid ants"
% version "1"
%class "black"

# define food_count 07H
#define enemy_count 06H
#define enemy_pos   21H

// return R0 as index nearly enemy
.GetNearlyEnemy
    // R0 - current len to enemy
    // R1 - min len to enemy
    // R2 - index nearly enemy
    MOV RC, [enemy_count]
    DEC RC
    MOV R1, 7FFFH // max len

beg_loop:
    LDEN RC
	DIST R0, [enemy_pos]
    GT   R0, R1
	JNZ  end_loop
    MOV  R1, R0
    MOV  R2, RC
end_loop:
    LOOP beg_loop
    MOV  R0, R2

.unused_func
    MOV RC, [enemy_count]
    DEC RC

//------------------------------
// Main algorithm of WORKER ant
.worker
    MOV  [R0 + 4], 33
//    MOV  RF, [1 * 2 + 3]
//	AND R0, P0
    MAX P1, P0
    MOV [R0 + 5], [R1 + P0:X * 2 + 10]
    // Если мы голодны (сытость <= 50.0)
    // то идем к ближайшей точке с едой
    // или кушаем из карго
    LE  [2], 500
    JNZ go_to_food

    // Если рядом минимум 2 противника, то атакуем ближайшего
    GE  [enemy_count], 2
    JNZ attack_enemy
    JMP finish
go_to_food:
    GT [7], 0
    JNZ eat_from_cargo
    LDFD 0
    CTKF [48]
    JMP finish

eat_from_cargo:
    CEAT 2
    JMP  finish

attack_enemy:
    CALL GetNearlyEnemy
    LDEN R0
    CATT [enemy_pos]
    JMP finish
finish:
    EXIT


.solder
    CIDL 2

.queen
    CIDL 2

//https://rutube.ru/play/embed/90a56f51c418afaddde572b95b2543f6