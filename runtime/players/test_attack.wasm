%core "0100"
%name "Black stupid ants. Moving form 0 to end and back again, attack enemies along the way."
%version "1"
%class "black"

#define iteration       00H
#define allies_count    07H
#define enemies_count   06H
#define food_count      07H
#define IR              0bH
#define enemy_info      14h
#define enemy_pos       15H
#define IF              24H

; interrupt flag bit numbers
#define IF_CA           0
#define IF_CC           1
#define IF_AT           2
#define IF_CE           3
#define IF_FE           4

#define Direction       32h
#define Attacking       33h

;-----------------------------------------------
; return R0 as index the closest enemy or -1
.GetClosestEnemy
    ; R0 - index of the nearest enemy
    ; R1 - min distance to an enemy
    ; R2 - the current distance to an enemy
    mov   r0, -1
    mov   rc, [enemies_count]
    ; if no enemy in the ant radius then exit
    jz    return
    dec   rc
    mov   r1, 7fffh ; max len
    
    ; main loop
beg_loop:
    lden  rc
    dist  <enemy_pos> ; r2 contain the distantion to enemy
    gt    r2, r1
    jt    end_loop
    mov   r1, r2
    mov   r0, rc
end_loop:
    loop  beg_loop
return:
    ret

;------------------------------------------------------------------------------
;
.Worker
    eq    [iteration], 0
    jf    main
init:
    mov   [IF], 001Bh      ; CA CC CE FE
    mov   [Direction], 2
    
main:
    ; checking the interrupt reason
    bt    [IR], IF_CA ; command aborted
    jt    simple_move
    bt    [IR], IF_CE ; enemies near of ant
    jt    attack
    bt    [IR], IF_FE ; enemies far of ant
    jt    attack

    ; no enemies, simple moving
simple_move:
    mov   [Attacking], 0
    bts   [IF], IF_CE
    bts   [IF], IF_FE
    eq    [Direction], 1
    jt    goto_end
    eq    [Direction], 2
    jt    goto_begin
    dbg   -1
    jmp   goto_begin
    
goto_end:
    mov   [Direction], 2
    mpsz  p0
    dec   p0
    cmov  p0
    jmp   end
    
goto_begin:
    mov   [Direction], 1
    mov   p0:x, 0
    mov   p0:y, 0
    cmov  p0
    jmp   end
    
attack:
    mov   [Attacking], 3
    call  GetClosestEnemy
    eq    r0, -1
    jt    end
    lden  r0
    dbg  777
    catt  <enemy_pos>
    btr   [IF], IF_CE
    btr   [IF], IF_FE
    jmp   end
    
end:
    dbg  [Direction]
    RET


.SOLDER
    ret


.QUEEN
    ret
