State 5 conflicts: 1 shift/reduce
State 13 conflicts: 1 shift/reduce


Grammar

    0 $accept: code $end

    1 code: list_of_pragmas list_of_asm_functions

    2 list_of_pragmas: list_of_pragmas pragma_definition
    3                | pragma_definition

    4 pragma_definition: pragma quted_string NEW_LINE

    5 pragma: PRAGMA_CLASS
    6       | PRAGMA_NAME
    7       | PRAGMA_VERSION

    8 list_of_defines: list_of_defines define_declaration
    9                | define_declaration
   10                | /* empty */

   11 define_declaration: PRAGMA_DEFINE label number NEW_LINE

   12 list_of_asm_functions: list_of_asm_functions asm_function
   13                      | asm_function

   14 asm_function: list_of_defines asm_function_name list_of_commands

   15 asm_function_name: DOT label NEW_LINE

   16 list_of_commands: list_of_commands asm_command_line
   17                 | asm_command_line

   18 asm_command_line: asm_command NEW_LINE

   19 asm_command: label COLON
   20            | ADD address COMMA address
   21            | AND address COMMA address
   22            | DEC address
   23            | DIV address COMMA address
   24            | INC address
   25            | MOD address COMMA address
   26            | MUL address COMMA address
   27            | NEG address
   28            | NOT address
   29            | OR address COMMA address
   30            | SUB address COMMA address
   31            | XOR address COMMA address
   32            | MIN address COMMA address
   33            | MAX address COMMA address
   34            | BSF address COMMA address
   35            | BSR address COMMA address
   36            | BT address COMMA address
   37            | BTR address COMMA address
   38            | BTS address COMMA address
   39            | BTC address COMMA address
   40            | SHL address COMMA address
   41            | SHR address COMMA address
   42            | ROL address COMMA address
   43            | ROR address COMMA address
   44            | EQ address COMMA address
   45            | NEQ address COMMA address
   46            | GT address COMMA address
   47            | GE address COMMA address
   48            | LT address COMMA address
   49            | LE address COMMA address
   50            | TEST address COMMA address
   51            | JMP label
   52            | JZ label
   53            | JNZ label
   54            | JO label
   55            | JNO label
   56            | JCZ label
   57            | JCNZ label
   58            | LOOP label
   59            | MOV address COMMA address
   60            | CALL label
   61            | LEN address COMMA address
   62            | EXIT
   63            | LDTR address
   64            | LDFD address
   65            | LDEN address
   66            | LDFR address
   67            | CIDL address
   68            | CMOV address COMMA address
   69            | CATT address COMMA address
   70            | CTKF address COMMA address
   71            | CGVF address COMMA address
   72            | CEAT address
   73            | CPS
   74            | CPW
   75            | NOP

   76 quted_string: CHARACTER_STRING

   77 label: ID

   78 address: expression
   79        | LSQUARE expression RSQUARE

   80 expression: expr_0

   81 expr_0: expr_1
   82       | expr_0 PLUS expr_1
   83       | expr_0 MINUS expr_1

   84 expr_1: expr_2
   85       | expr_1 STAR expr_2

   86 expr_2: expr_3
   87       | LROUND expr_0 RROUND

   88 expr_3: R0
   89       | R1
   90       | R2
   91       | R3
   92       | RC
   93       | RF
   94       | IF
   95       | IR
   96       | number
   97       | label

   98 number: INT_NUMBER
   99       | HEX_NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
LROUND (258) 87
RROUND (259) 87
LSQUARE (260) 79
RSQUARE (261) 79
COMMA (262) 20 21 23 25 26 29 30 31 32 33 34 35 36 37 38 39 40 41 42
    43 44 45 46 47 48 49 50 59 61 68 69 70 71
NEW_LINE (263) 4 11 15 18
COLON (264) 19
DOT (265) 15
INT_NUMBER (266) 98
HEX_NUMBER (267) 99
ID (268) 77
CHARACTER_STRING (269) 76
PRAGMA_NAME (270) 6
PRAGMA_VERSION (271) 7
PRAGMA_CLASS (272) 5
PRAGMA_DEFINE (273) 11
R0 (274) 88
R1 (275) 89
R2 (276) 90
R3 (277) 91
RC (278) 92
RF (279) 93
IF (280) 94
IR (281) 95
PLUS (282) 82
MINUS (283) 83
STAR (284) 85
ADD (285) 20
AND (286) 21
DEC (287) 22
DIV (288) 23
INC (289) 24
MOD (290) 25
MUL (291) 26
NEG (292) 27
NOT (293) 28
OR (294) 29
SUB (295) 30
XOR (296) 31
MIN (297) 32
MAX (298) 33
BSF (299) 34
BSR (300) 35
BT (301) 36
BTR (302) 37
BTS (303) 38
BTC (304) 39
SHL (305) 40
SHR (306) 41
ROL (307) 42
ROR (308) 43
EQ (309) 44
NEQ (310) 45
GT (311) 46
GE (312) 47
LT (313) 48
LE (314) 49
TEST (315) 50
JMP (316) 51
JZ (317) 52
JNZ (318) 53
JO (319) 54
JNO (320) 55
JCZ (321) 56
JCNZ (322) 57
LOOP (323) 58
MOV (324) 59
CALL (325) 60
LEN (326) 61
EXIT (327) 62
LDTR (328) 63
LDFD (329) 64
LDEN (330) 65
LDFR (331) 66
CIDL (332) 67
CMOV (333) 68
CATT (334) 69
CTKF (335) 70
CGVF (336) 71
CEAT (337) 72
CPS (338) 73
CPW (339) 74
NOP (340) 75


Nonterminals, with rules where they appear

$accept (86)
    on left: 0
code (87)
    on left: 1, on right: 0
list_of_pragmas (88)
    on left: 2 3, on right: 1 2
pragma_definition (89)
    on left: 4, on right: 2 3
pragma (90)
    on left: 5 6 7, on right: 4
list_of_defines (91)
    on left: 8 9 10, on right: 8 14
define_declaration (92)
    on left: 11, on right: 8 9
list_of_asm_functions (93)
    on left: 12 13, on right: 1 12
asm_function (94)
    on left: 14, on right: 12 13
asm_function_name (95)
    on left: 15, on right: 14
list_of_commands (96)
    on left: 16 17, on right: 14 16
asm_command_line (97)
    on left: 18, on right: 16 17
asm_command (98)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
    37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75, on right:
    18
quted_string (99)
    on left: 76, on right: 4
label (100)
    on left: 77, on right: 11 15 19 51 52 53 54 55 56 57 58 60 97
address (101)
    on left: 78 79, on right: 20 21 22 23 24 25 26 27 28 29 30 31 32
    33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 59 61 63
    64 65 66 67 68 69 70 71 72
expression (102)
    on left: 80, on right: 78 79
expr_0 (103)
    on left: 81 82 83, on right: 80 82 83 87
expr_1 (104)
    on left: 84 85, on right: 81 82 83 85
expr_2 (105)
    on left: 86 87, on right: 84 85
expr_3 (106)
    on left: 88 89 90 91 92 93 94 95 96 97, on right: 86
number (107)
    on left: 98 99, on right: 11 96


state 0

    0 $accept: . code $end

    PRAGMA_NAME     shift, and go to state 1
    PRAGMA_VERSION  shift, and go to state 2
    PRAGMA_CLASS    shift, and go to state 3

    code               go to state 4
    list_of_pragmas    go to state 5
    pragma_definition  go to state 6
    pragma             go to state 7


state 1

    6 pragma: PRAGMA_NAME .

    $default  reduce using rule 6 (pragma)


state 2

    7 pragma: PRAGMA_VERSION .

    $default  reduce using rule 7 (pragma)


state 3

    5 pragma: PRAGMA_CLASS .

    $default  reduce using rule 5 (pragma)


state 4

    0 $accept: code . $end

    $end  shift, and go to state 8


state 5

    1 code: list_of_pragmas . list_of_asm_functions
    2 list_of_pragmas: list_of_pragmas . pragma_definition

    PRAGMA_NAME     shift, and go to state 1
    PRAGMA_VERSION  shift, and go to state 2
    PRAGMA_CLASS    shift, and go to state 3
    PRAGMA_DEFINE   shift, and go to state 9

    PRAGMA_DEFINE  [reduce using rule 10 (list_of_defines)]
    $default       reduce using rule 10 (list_of_defines)

    pragma_definition      go to state 10
    pragma                 go to state 7
    list_of_defines        go to state 11
    define_declaration     go to state 12
    list_of_asm_functions  go to state 13
    asm_function           go to state 14


state 6

    3 list_of_pragmas: pragma_definition .

    $default  reduce using rule 3 (list_of_pragmas)


state 7

    4 pragma_definition: pragma . quted_string NEW_LINE

    CHARACTER_STRING  shift, and go to state 15

    quted_string  go to state 16


state 8

    0 $accept: code $end .

    $default  accept


state 9

   11 define_declaration: PRAGMA_DEFINE . label number NEW_LINE

    ID  shift, and go to state 17

    label  go to state 18


state 10

    2 list_of_pragmas: list_of_pragmas pragma_definition .

    $default  reduce using rule 2 (list_of_pragmas)


state 11

    8 list_of_defines: list_of_defines . define_declaration
   14 asm_function: list_of_defines . asm_function_name list_of_commands

    DOT            shift, and go to state 19
    PRAGMA_DEFINE  shift, and go to state 9

    define_declaration  go to state 20
    asm_function_name   go to state 21


state 12

    9 list_of_defines: define_declaration .

    $default  reduce using rule 9 (list_of_defines)


state 13

    1 code: list_of_pragmas list_of_asm_functions .
   12 list_of_asm_functions: list_of_asm_functions . asm_function

    PRAGMA_DEFINE  shift, and go to state 9

    DOT            reduce using rule 10 (list_of_defines)
    PRAGMA_DEFINE  [reduce using rule 10 (list_of_defines)]
    $default       reduce using rule 1 (code)

    list_of_defines     go to state 11
    define_declaration  go to state 12
    asm_function        go to state 22


state 14

   13 list_of_asm_functions: asm_function .

    $default  reduce using rule 13 (list_of_asm_functions)


state 15

   76 quted_string: CHARACTER_STRING .

    $default  reduce using rule 76 (quted_string)


state 16

    4 pragma_definition: pragma quted_string . NEW_LINE

    NEW_LINE  shift, and go to state 23


state 17

   77 label: ID .

    $default  reduce using rule 77 (label)


state 18

   11 define_declaration: PRAGMA_DEFINE label . number NEW_LINE

    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25

    number  go to state 26


state 19

   15 asm_function_name: DOT . label NEW_LINE

    ID  shift, and go to state 17

    label  go to state 27


state 20

    8 list_of_defines: list_of_defines define_declaration .

    $default  reduce using rule 8 (list_of_defines)


state 21

   14 asm_function: list_of_defines asm_function_name . list_of_commands

    ID    shift, and go to state 17
    ADD   shift, and go to state 28
    AND   shift, and go to state 29
    DEC   shift, and go to state 30
    DIV   shift, and go to state 31
    INC   shift, and go to state 32
    MOD   shift, and go to state 33
    MUL   shift, and go to state 34
    NEG   shift, and go to state 35
    NOT   shift, and go to state 36
    OR    shift, and go to state 37
    SUB   shift, and go to state 38
    XOR   shift, and go to state 39
    MIN   shift, and go to state 40
    MAX   shift, and go to state 41
    BSF   shift, and go to state 42
    BSR   shift, and go to state 43
    BT    shift, and go to state 44
    BTR   shift, and go to state 45
    BTS   shift, and go to state 46
    BTC   shift, and go to state 47
    SHL   shift, and go to state 48
    SHR   shift, and go to state 49
    ROL   shift, and go to state 50
    ROR   shift, and go to state 51
    EQ    shift, and go to state 52
    NEQ   shift, and go to state 53
    GT    shift, and go to state 54
    GE    shift, and go to state 55
    LT    shift, and go to state 56
    LE    shift, and go to state 57
    TEST  shift, and go to state 58
    JMP   shift, and go to state 59
    JZ    shift, and go to state 60
    JNZ   shift, and go to state 61
    JO    shift, and go to state 62
    JNO   shift, and go to state 63
    JCZ   shift, and go to state 64
    JCNZ  shift, and go to state 65
    LOOP  shift, and go to state 66
    MOV   shift, and go to state 67
    CALL  shift, and go to state 68
    LEN   shift, and go to state 69
    EXIT  shift, and go to state 70
    LDTR  shift, and go to state 71
    LDFD  shift, and go to state 72
    LDEN  shift, and go to state 73
    LDFR  shift, and go to state 74
    CIDL  shift, and go to state 75
    CMOV  shift, and go to state 76
    CATT  shift, and go to state 77
    CTKF  shift, and go to state 78
    CGVF  shift, and go to state 79
    CEAT  shift, and go to state 80
    CPS   shift, and go to state 81
    CPW   shift, and go to state 82
    NOP   shift, and go to state 83

    list_of_commands  go to state 84
    asm_command_line  go to state 85
    asm_command       go to state 86
    label             go to state 87


state 22

   12 list_of_asm_functions: list_of_asm_functions asm_function .

    $default  reduce using rule 12 (list_of_asm_functions)


state 23

    4 pragma_definition: pragma quted_string NEW_LINE .

    $default  reduce using rule 4 (pragma_definition)


state 24

   98 number: INT_NUMBER .

    $default  reduce using rule 98 (number)


state 25

   99 number: HEX_NUMBER .

    $default  reduce using rule 99 (number)


state 26

   11 define_declaration: PRAGMA_DEFINE label number . NEW_LINE

    NEW_LINE  shift, and go to state 88


state 27

   15 asm_function_name: DOT label . NEW_LINE

    NEW_LINE  shift, and go to state 89


state 28

   20 asm_command: ADD . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 101
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 29

   21 asm_command: AND . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 108
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 30

   22 asm_command: DEC . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 109
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 31

   23 asm_command: DIV . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 110
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 32

   24 asm_command: INC . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 111
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 33

   25 asm_command: MOD . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 112
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 34

   26 asm_command: MUL . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 113
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 35

   27 asm_command: NEG . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 114
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 36

   28 asm_command: NOT . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 115
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 37

   29 asm_command: OR . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 116
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 38

   30 asm_command: SUB . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 117
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 39

   31 asm_command: XOR . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 118
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 40

   32 asm_command: MIN . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 119
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 41

   33 asm_command: MAX . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 120
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 42

   34 asm_command: BSF . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 121
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 43

   35 asm_command: BSR . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 122
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 44

   36 asm_command: BT . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 123
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 45

   37 asm_command: BTR . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 124
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 46

   38 asm_command: BTS . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 125
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 47

   39 asm_command: BTC . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 126
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 48

   40 asm_command: SHL . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 127
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 49

   41 asm_command: SHR . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 128
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 50

   42 asm_command: ROL . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 129
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 51

   43 asm_command: ROR . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 130
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 52

   44 asm_command: EQ . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 131
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 53

   45 asm_command: NEQ . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 132
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 54

   46 asm_command: GT . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 133
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 55

   47 asm_command: GE . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 134
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 56

   48 asm_command: LT . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 135
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 57

   49 asm_command: LE . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 136
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 58

   50 asm_command: TEST . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 137
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 59

   51 asm_command: JMP . label

    ID  shift, and go to state 17

    label  go to state 138


state 60

   52 asm_command: JZ . label

    ID  shift, and go to state 17

    label  go to state 139


state 61

   53 asm_command: JNZ . label

    ID  shift, and go to state 17

    label  go to state 140


state 62

   54 asm_command: JO . label

    ID  shift, and go to state 17

    label  go to state 141


state 63

   55 asm_command: JNO . label

    ID  shift, and go to state 17

    label  go to state 142


state 64

   56 asm_command: JCZ . label

    ID  shift, and go to state 17

    label  go to state 143


state 65

   57 asm_command: JCNZ . label

    ID  shift, and go to state 17

    label  go to state 144


state 66

   58 asm_command: LOOP . label

    ID  shift, and go to state 17

    label  go to state 145


state 67

   59 asm_command: MOV . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 146
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 68

   60 asm_command: CALL . label

    ID  shift, and go to state 17

    label  go to state 147


state 69

   61 asm_command: LEN . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 148
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 70

   62 asm_command: EXIT .

    $default  reduce using rule 62 (asm_command)


state 71

   63 asm_command: LDTR . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 149
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 72

   64 asm_command: LDFD . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 150
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 73

   65 asm_command: LDEN . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 151
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 74

   66 asm_command: LDFR . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 152
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 75

   67 asm_command: CIDL . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 153
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 76

   68 asm_command: CMOV . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 154
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 77

   69 asm_command: CATT . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 155
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 78

   70 asm_command: CTKF . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 156
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 79

   71 asm_command: CGVF . address COMMA address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 157
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 80

   72 asm_command: CEAT . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 158
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 81

   73 asm_command: CPS .

    $default  reduce using rule 73 (asm_command)


state 82

   74 asm_command: CPW .

    $default  reduce using rule 74 (asm_command)


state 83

   75 asm_command: NOP .

    $default  reduce using rule 75 (asm_command)


state 84

   14 asm_function: list_of_defines asm_function_name list_of_commands .
   16 list_of_commands: list_of_commands . asm_command_line

    ID    shift, and go to state 17
    ADD   shift, and go to state 28
    AND   shift, and go to state 29
    DEC   shift, and go to state 30
    DIV   shift, and go to state 31
    INC   shift, and go to state 32
    MOD   shift, and go to state 33
    MUL   shift, and go to state 34
    NEG   shift, and go to state 35
    NOT   shift, and go to state 36
    OR    shift, and go to state 37
    SUB   shift, and go to state 38
    XOR   shift, and go to state 39
    MIN   shift, and go to state 40
    MAX   shift, and go to state 41
    BSF   shift, and go to state 42
    BSR   shift, and go to state 43
    BT    shift, and go to state 44
    BTR   shift, and go to state 45
    BTS   shift, and go to state 46
    BTC   shift, and go to state 47
    SHL   shift, and go to state 48
    SHR   shift, and go to state 49
    ROL   shift, and go to state 50
    ROR   shift, and go to state 51
    EQ    shift, and go to state 52
    NEQ   shift, and go to state 53
    GT    shift, and go to state 54
    GE    shift, and go to state 55
    LT    shift, and go to state 56
    LE    shift, and go to state 57
    TEST  shift, and go to state 58
    JMP   shift, and go to state 59
    JZ    shift, and go to state 60
    JNZ   shift, and go to state 61
    JO    shift, and go to state 62
    JNO   shift, and go to state 63
    JCZ   shift, and go to state 64
    JCNZ  shift, and go to state 65
    LOOP  shift, and go to state 66
    MOV   shift, and go to state 67
    CALL  shift, and go to state 68
    LEN   shift, and go to state 69
    EXIT  shift, and go to state 70
    LDTR  shift, and go to state 71
    LDFD  shift, and go to state 72
    LDEN  shift, and go to state 73
    LDFR  shift, and go to state 74
    CIDL  shift, and go to state 75
    CMOV  shift, and go to state 76
    CATT  shift, and go to state 77
    CTKF  shift, and go to state 78
    CGVF  shift, and go to state 79
    CEAT  shift, and go to state 80
    CPS   shift, and go to state 81
    CPW   shift, and go to state 82
    NOP   shift, and go to state 83

    $default  reduce using rule 14 (asm_function)

    asm_command_line  go to state 159
    asm_command       go to state 86
    label             go to state 87


state 85

   17 list_of_commands: asm_command_line .

    $default  reduce using rule 17 (list_of_commands)


state 86

   18 asm_command_line: asm_command . NEW_LINE

    NEW_LINE  shift, and go to state 160


state 87

   19 asm_command: label . COLON

    COLON  shift, and go to state 161


state 88

   11 define_declaration: PRAGMA_DEFINE label number NEW_LINE .

    $default  reduce using rule 11 (define_declaration)


state 89

   15 asm_function_name: DOT label NEW_LINE .

    $default  reduce using rule 15 (asm_function_name)


state 90

   87 expr_2: LROUND . expr_0 RROUND

    LROUND      shift, and go to state 90
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label   go to state 100
    expr_0  go to state 162
    expr_1  go to state 104
    expr_2  go to state 105
    expr_3  go to state 106
    number  go to state 107


state 91

   79 address: LSQUARE . expression RSQUARE

    LROUND      shift, and go to state 90
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    expression  go to state 163
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 92

   88 expr_3: R0 .

    $default  reduce using rule 88 (expr_3)


state 93

   89 expr_3: R1 .

    $default  reduce using rule 89 (expr_3)


state 94

   90 expr_3: R2 .

    $default  reduce using rule 90 (expr_3)


state 95

   91 expr_3: R3 .

    $default  reduce using rule 91 (expr_3)


state 96

   92 expr_3: RC .

    $default  reduce using rule 92 (expr_3)


state 97

   93 expr_3: RF .

    $default  reduce using rule 93 (expr_3)


state 98

   94 expr_3: IF .

    $default  reduce using rule 94 (expr_3)


state 99

   95 expr_3: IR .

    $default  reduce using rule 95 (expr_3)


state 100

   97 expr_3: label .

    $default  reduce using rule 97 (expr_3)


state 101

   20 asm_command: ADD address . COMMA address

    COMMA  shift, and go to state 164


state 102

   78 address: expression .

    $default  reduce using rule 78 (address)


state 103

   80 expression: expr_0 .
   82 expr_0: expr_0 . PLUS expr_1
   83       | expr_0 . MINUS expr_1

    PLUS   shift, and go to state 165
    MINUS  shift, and go to state 166

    $default  reduce using rule 80 (expression)


state 104

   81 expr_0: expr_1 .
   85 expr_1: expr_1 . STAR expr_2

    STAR  shift, and go to state 167

    $default  reduce using rule 81 (expr_0)


state 105

   84 expr_1: expr_2 .

    $default  reduce using rule 84 (expr_1)


state 106

   86 expr_2: expr_3 .

    $default  reduce using rule 86 (expr_2)


state 107

   96 expr_3: number .

    $default  reduce using rule 96 (expr_3)


state 108

   21 asm_command: AND address . COMMA address

    COMMA  shift, and go to state 168


state 109

   22 asm_command: DEC address .

    $default  reduce using rule 22 (asm_command)


state 110

   23 asm_command: DIV address . COMMA address

    COMMA  shift, and go to state 169


state 111

   24 asm_command: INC address .

    $default  reduce using rule 24 (asm_command)


state 112

   25 asm_command: MOD address . COMMA address

    COMMA  shift, and go to state 170


state 113

   26 asm_command: MUL address . COMMA address

    COMMA  shift, and go to state 171


state 114

   27 asm_command: NEG address .

    $default  reduce using rule 27 (asm_command)


state 115

   28 asm_command: NOT address .

    $default  reduce using rule 28 (asm_command)


state 116

   29 asm_command: OR address . COMMA address

    COMMA  shift, and go to state 172


state 117

   30 asm_command: SUB address . COMMA address

    COMMA  shift, and go to state 173


state 118

   31 asm_command: XOR address . COMMA address

    COMMA  shift, and go to state 174


state 119

   32 asm_command: MIN address . COMMA address

    COMMA  shift, and go to state 175


state 120

   33 asm_command: MAX address . COMMA address

    COMMA  shift, and go to state 176


state 121

   34 asm_command: BSF address . COMMA address

    COMMA  shift, and go to state 177


state 122

   35 asm_command: BSR address . COMMA address

    COMMA  shift, and go to state 178


state 123

   36 asm_command: BT address . COMMA address

    COMMA  shift, and go to state 179


state 124

   37 asm_command: BTR address . COMMA address

    COMMA  shift, and go to state 180


state 125

   38 asm_command: BTS address . COMMA address

    COMMA  shift, and go to state 181


state 126

   39 asm_command: BTC address . COMMA address

    COMMA  shift, and go to state 182


state 127

   40 asm_command: SHL address . COMMA address

    COMMA  shift, and go to state 183


state 128

   41 asm_command: SHR address . COMMA address

    COMMA  shift, and go to state 184


state 129

   42 asm_command: ROL address . COMMA address

    COMMA  shift, and go to state 185


state 130

   43 asm_command: ROR address . COMMA address

    COMMA  shift, and go to state 186


state 131

   44 asm_command: EQ address . COMMA address

    COMMA  shift, and go to state 187


state 132

   45 asm_command: NEQ address . COMMA address

    COMMA  shift, and go to state 188


state 133

   46 asm_command: GT address . COMMA address

    COMMA  shift, and go to state 189


state 134

   47 asm_command: GE address . COMMA address

    COMMA  shift, and go to state 190


state 135

   48 asm_command: LT address . COMMA address

    COMMA  shift, and go to state 191


state 136

   49 asm_command: LE address . COMMA address

    COMMA  shift, and go to state 192


state 137

   50 asm_command: TEST address . COMMA address

    COMMA  shift, and go to state 193


state 138

   51 asm_command: JMP label .

    $default  reduce using rule 51 (asm_command)


state 139

   52 asm_command: JZ label .

    $default  reduce using rule 52 (asm_command)


state 140

   53 asm_command: JNZ label .

    $default  reduce using rule 53 (asm_command)


state 141

   54 asm_command: JO label .

    $default  reduce using rule 54 (asm_command)


state 142

   55 asm_command: JNO label .

    $default  reduce using rule 55 (asm_command)


state 143

   56 asm_command: JCZ label .

    $default  reduce using rule 56 (asm_command)


state 144

   57 asm_command: JCNZ label .

    $default  reduce using rule 57 (asm_command)


state 145

   58 asm_command: LOOP label .

    $default  reduce using rule 58 (asm_command)


state 146

   59 asm_command: MOV address . COMMA address

    COMMA  shift, and go to state 194


state 147

   60 asm_command: CALL label .

    $default  reduce using rule 60 (asm_command)


state 148

   61 asm_command: LEN address . COMMA address

    COMMA  shift, and go to state 195


state 149

   63 asm_command: LDTR address .

    $default  reduce using rule 63 (asm_command)


state 150

   64 asm_command: LDFD address .

    $default  reduce using rule 64 (asm_command)


state 151

   65 asm_command: LDEN address .

    $default  reduce using rule 65 (asm_command)


state 152

   66 asm_command: LDFR address .

    $default  reduce using rule 66 (asm_command)


state 153

   67 asm_command: CIDL address .

    $default  reduce using rule 67 (asm_command)


state 154

   68 asm_command: CMOV address . COMMA address

    COMMA  shift, and go to state 196


state 155

   69 asm_command: CATT address . COMMA address

    COMMA  shift, and go to state 197


state 156

   70 asm_command: CTKF address . COMMA address

    COMMA  shift, and go to state 198


state 157

   71 asm_command: CGVF address . COMMA address

    COMMA  shift, and go to state 199


state 158

   72 asm_command: CEAT address .

    $default  reduce using rule 72 (asm_command)


state 159

   16 list_of_commands: list_of_commands asm_command_line .

    $default  reduce using rule 16 (list_of_commands)


state 160

   18 asm_command_line: asm_command NEW_LINE .

    $default  reduce using rule 18 (asm_command_line)


state 161

   19 asm_command: label COLON .

    $default  reduce using rule 19 (asm_command)


state 162

   82 expr_0: expr_0 . PLUS expr_1
   83       | expr_0 . MINUS expr_1
   87 expr_2: LROUND expr_0 . RROUND

    RROUND  shift, and go to state 200
    PLUS    shift, and go to state 165
    MINUS   shift, and go to state 166


state 163

   79 address: LSQUARE expression . RSQUARE

    RSQUARE  shift, and go to state 201


state 164

   20 asm_command: ADD address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 202
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 165

   82 expr_0: expr_0 PLUS . expr_1

    LROUND      shift, and go to state 90
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label   go to state 100
    expr_1  go to state 203
    expr_2  go to state 105
    expr_3  go to state 106
    number  go to state 107


state 166

   83 expr_0: expr_0 MINUS . expr_1

    LROUND      shift, and go to state 90
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label   go to state 100
    expr_1  go to state 204
    expr_2  go to state 105
    expr_3  go to state 106
    number  go to state 107


state 167

   85 expr_1: expr_1 STAR . expr_2

    LROUND      shift, and go to state 90
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label   go to state 100
    expr_2  go to state 205
    expr_3  go to state 106
    number  go to state 107


state 168

   21 asm_command: AND address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 206
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 169

   23 asm_command: DIV address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 207
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 170

   25 asm_command: MOD address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 208
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 171

   26 asm_command: MUL address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 209
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 172

   29 asm_command: OR address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 210
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 173

   30 asm_command: SUB address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 211
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 174

   31 asm_command: XOR address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 212
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 175

   32 asm_command: MIN address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 213
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 176

   33 asm_command: MAX address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 214
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 177

   34 asm_command: BSF address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 215
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 178

   35 asm_command: BSR address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 216
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 179

   36 asm_command: BT address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 217
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 180

   37 asm_command: BTR address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 218
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 181

   38 asm_command: BTS address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 219
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 182

   39 asm_command: BTC address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 220
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 183

   40 asm_command: SHL address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 221
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 184

   41 asm_command: SHR address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 222
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 185

   42 asm_command: ROL address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 223
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 186

   43 asm_command: ROR address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 224
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 187

   44 asm_command: EQ address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 225
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 188

   45 asm_command: NEQ address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 226
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 189

   46 asm_command: GT address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 227
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 190

   47 asm_command: GE address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 228
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 191

   48 asm_command: LT address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 229
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 192

   49 asm_command: LE address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 230
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 193

   50 asm_command: TEST address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 231
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 194

   59 asm_command: MOV address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 232
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 195

   61 asm_command: LEN address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 233
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 196

   68 asm_command: CMOV address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 234
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 197

   69 asm_command: CATT address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 235
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 198

   70 asm_command: CTKF address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 236
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 199

   71 asm_command: CGVF address COMMA . address

    LROUND      shift, and go to state 90
    LSQUARE     shift, and go to state 91
    INT_NUMBER  shift, and go to state 24
    HEX_NUMBER  shift, and go to state 25
    ID          shift, and go to state 17
    R0          shift, and go to state 92
    R1          shift, and go to state 93
    R2          shift, and go to state 94
    R3          shift, and go to state 95
    RC          shift, and go to state 96
    RF          shift, and go to state 97
    IF          shift, and go to state 98
    IR          shift, and go to state 99

    label       go to state 100
    address     go to state 237
    expression  go to state 102
    expr_0      go to state 103
    expr_1      go to state 104
    expr_2      go to state 105
    expr_3      go to state 106
    number      go to state 107


state 200

   87 expr_2: LROUND expr_0 RROUND .

    $default  reduce using rule 87 (expr_2)


state 201

   79 address: LSQUARE expression RSQUARE .

    $default  reduce using rule 79 (address)


state 202

   20 asm_command: ADD address COMMA address .

    $default  reduce using rule 20 (asm_command)


state 203

   82 expr_0: expr_0 PLUS expr_1 .
   85 expr_1: expr_1 . STAR expr_2

    STAR  shift, and go to state 167

    $default  reduce using rule 82 (expr_0)


state 204

   83 expr_0: expr_0 MINUS expr_1 .
   85 expr_1: expr_1 . STAR expr_2

    STAR  shift, and go to state 167

    $default  reduce using rule 83 (expr_0)


state 205

   85 expr_1: expr_1 STAR expr_2 .

    $default  reduce using rule 85 (expr_1)


state 206

   21 asm_command: AND address COMMA address .

    $default  reduce using rule 21 (asm_command)


state 207

   23 asm_command: DIV address COMMA address .

    $default  reduce using rule 23 (asm_command)


state 208

   25 asm_command: MOD address COMMA address .

    $default  reduce using rule 25 (asm_command)


state 209

   26 asm_command: MUL address COMMA address .

    $default  reduce using rule 26 (asm_command)


state 210

   29 asm_command: OR address COMMA address .

    $default  reduce using rule 29 (asm_command)


state 211

   30 asm_command: SUB address COMMA address .

    $default  reduce using rule 30 (asm_command)


state 212

   31 asm_command: XOR address COMMA address .

    $default  reduce using rule 31 (asm_command)


state 213

   32 asm_command: MIN address COMMA address .

    $default  reduce using rule 32 (asm_command)


state 214

   33 asm_command: MAX address COMMA address .

    $default  reduce using rule 33 (asm_command)


state 215

   34 asm_command: BSF address COMMA address .

    $default  reduce using rule 34 (asm_command)


state 216

   35 asm_command: BSR address COMMA address .

    $default  reduce using rule 35 (asm_command)


state 217

   36 asm_command: BT address COMMA address .

    $default  reduce using rule 36 (asm_command)


state 218

   37 asm_command: BTR address COMMA address .

    $default  reduce using rule 37 (asm_command)


state 219

   38 asm_command: BTS address COMMA address .

    $default  reduce using rule 38 (asm_command)


state 220

   39 asm_command: BTC address COMMA address .

    $default  reduce using rule 39 (asm_command)


state 221

   40 asm_command: SHL address COMMA address .

    $default  reduce using rule 40 (asm_command)


state 222

   41 asm_command: SHR address COMMA address .

    $default  reduce using rule 41 (asm_command)


state 223

   42 asm_command: ROL address COMMA address .

    $default  reduce using rule 42 (asm_command)


state 224

   43 asm_command: ROR address COMMA address .

    $default  reduce using rule 43 (asm_command)


state 225

   44 asm_command: EQ address COMMA address .

    $default  reduce using rule 44 (asm_command)


state 226

   45 asm_command: NEQ address COMMA address .

    $default  reduce using rule 45 (asm_command)


state 227

   46 asm_command: GT address COMMA address .

    $default  reduce using rule 46 (asm_command)


state 228

   47 asm_command: GE address COMMA address .

    $default  reduce using rule 47 (asm_command)


state 229

   48 asm_command: LT address COMMA address .

    $default  reduce using rule 48 (asm_command)


state 230

   49 asm_command: LE address COMMA address .

    $default  reduce using rule 49 (asm_command)


state 231

   50 asm_command: TEST address COMMA address .

    $default  reduce using rule 50 (asm_command)


state 232

   59 asm_command: MOV address COMMA address .

    $default  reduce using rule 59 (asm_command)


state 233

   61 asm_command: LEN address COMMA address .

    $default  reduce using rule 61 (asm_command)


state 234

   68 asm_command: CMOV address COMMA address .

    $default  reduce using rule 68 (asm_command)


state 235

   69 asm_command: CATT address COMMA address .

    $default  reduce using rule 69 (asm_command)


state 236

   70 asm_command: CTKF address COMMA address .

    $default  reduce using rule 70 (asm_command)


state 237

   71 asm_command: CGVF address COMMA address .

    $default  reduce using rule 71 (asm_command)
