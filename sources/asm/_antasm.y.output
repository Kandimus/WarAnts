Грамматика

    0 $accept: code $end

    1 code: list_of_pragma list_of_asm_function

    2 list_of_pragma: list_of_pragma pragma_definition
    3               | pragma_definition

    4 pragma_definition: pragma quted_string NEW_LINE

    5 pragma: PRAGMA_CLASS
    6       | PRAGMA_NAME
    7       | PRAGMA_VERSION

    8 list_of_asm_function: list_of_asm_function asm_function
    9                     | asm_function

   10 asm_function: asm_function_name list_of_command

   11 asm_function_name: DOT label NEW_LINE

   12 list_of_command: list_of_command asm_command_line
   13                | asm_command_line

   14 asm_command_line: asm_command NEW_LINE

   15 asm_command: label COLON
   16            | ADD address COMMA address
   17            | AND address COMMA address
   18            | BSF address COMMA address
   19            | BSR address COMMA address
   20            | MOV address COMMA address

   21 quted_string: CHARACTER_STRING

   22 label: ID

   23 address: expression
   24        | LSQUARE expression RSQUARE

   25 expression: expr_0

   26 expr_0: expr_1
   27       | expr_0 PLUS expr_1
   28       | expr_0 MINUS expr_1

   29 expr_1: expr_2
   30       | expr_1 STAR expr_2

   31 expr_2: expr_3
   32       | LROUND expr_0 RROUND

   33 expr_3: R0
   34       | R1
   35       | R2
   36       | R3
   37       | RC
   38       | RF
   39       | IF
   40       | IR
   41       | number

   42 number: INT_NUMBER
   43       | HEX_NUMBER


Терминальные символы с правилами, в которых они появляются

$end (0) 0
error (256)
LROUND (258) 32
RROUND (259) 32
LSQUARE (260) 24
RSQUARE (261) 24
COMMA (262) 16 17 18 19 20
NEW_LINE (263) 4 11 14
COLON (264) 15
DOT (265) 11
INT_NUMBER (266) 42
HEX_NUMBER (267) 43
ID (268) 22
CHARACTER_STRING (269) 21
PRAGMA_NAME (270) 6
PRAGMA_VERSION (271) 7
PRAGMA_CLASS (272) 5
R0 (273) 33
R1 (274) 34
R2 (275) 35
R3 (276) 36
RC (277) 37
RF (278) 38
IF (279) 39
IR (280) 40
PLUS (281) 27
MINUS (282) 28
STAR (283) 30
ADD (284) 16
AND (285) 17
BSF (286) 18
BSR (287) 19
MOV (288) 20


Нетерминальные символы с правилами, в которых они появляются

$accept (34)
    налево: 0
code (35)
    налево: 1, направо: 0
list_of_pragma (36)
    налево: 2 3, направо: 1 2
pragma_definition (37)
    налево: 4, направо: 2 3
pragma (38)
    налево: 5 6 7, направо: 4
list_of_asm_function (39)
    налево: 8 9, направо: 1 8
asm_function (40)
    налево: 10, направо: 8 9
asm_function_name (41)
    налево: 11, направо: 10
list_of_command (42)
    налево: 12 13, направо: 10 12
asm_command_line (43)
    налево: 14, направо: 12 13
asm_command (44)
    налево: 15 16 17 18 19 20, направо: 14
quted_string (45)
    налево: 21, направо: 4
label (46)
    налево: 22, направо: 11 15
address (47)
    налево: 23 24, направо: 16 17 18 19 20
expression (48)
    налево: 25, направо: 23 24
expr_0 (49)
    налево: 26 27 28, направо: 25 27 28 32
expr_1 (50)
    налево: 29 30, направо: 26 27 28 30
expr_2 (51)
    налево: 31 32, направо: 29 30
expr_3 (52)
    налево: 33 34 35 36 37 38 39 40 41, направо: 31
number (53)
    налево: 42 43, направо: 41


состояние 0

    0 $accept: . code $end

    PRAGMA_NAME     сдвиг, и переход в состояние 1
    PRAGMA_VERSION  сдвиг, и переход в состояние 2
    PRAGMA_CLASS    сдвиг, и переход в состояние 3

    code               переход в состояние 4
    list_of_pragma     переход в состояние 5
    pragma_definition  переход в состояние 6
    pragma             переход в состояние 7


состояние 1

    6 pragma: PRAGMA_NAME .

    $default  вывод с использованием правила 6 (pragma)


состояние 2

    7 pragma: PRAGMA_VERSION .

    $default  вывод с использованием правила 7 (pragma)


состояние 3

    5 pragma: PRAGMA_CLASS .

    $default  вывод с использованием правила 5 (pragma)


состояние 4

    0 $accept: code . $end

    $end  сдвиг, и переход в состояние 8


состояние 5

    1 code: list_of_pragma . list_of_asm_function
    2 list_of_pragma: list_of_pragma . pragma_definition

    DOT             сдвиг, и переход в состояние 9
    PRAGMA_NAME     сдвиг, и переход в состояние 1
    PRAGMA_VERSION  сдвиг, и переход в состояние 2
    PRAGMA_CLASS    сдвиг, и переход в состояние 3

    pragma_definition     переход в состояние 10
    pragma                переход в состояние 7
    list_of_asm_function  переход в состояние 11
    asm_function          переход в состояние 12
    asm_function_name     переход в состояние 13


состояние 6

    3 list_of_pragma: pragma_definition .

    $default  вывод с использованием правила 3 (list_of_pragma)


состояние 7

    4 pragma_definition: pragma . quted_string NEW_LINE

    CHARACTER_STRING  сдвиг, и переход в состояние 14

    quted_string  переход в состояние 15


состояние 8

    0 $accept: code $end .

    $default  accept


состояние 9

   11 asm_function_name: DOT . label NEW_LINE

    ID  сдвиг, и переход в состояние 16

    label  переход в состояние 17


состояние 10

    2 list_of_pragma: list_of_pragma pragma_definition .

    $default  вывод с использованием правила 2 (list_of_pragma)


состояние 11

    1 code: list_of_pragma list_of_asm_function .
    8 list_of_asm_function: list_of_asm_function . asm_function

    DOT  сдвиг, и переход в состояние 9

    $default  вывод с использованием правила 1 (code)

    asm_function       переход в состояние 18
    asm_function_name  переход в состояние 13


состояние 12

    9 list_of_asm_function: asm_function .

    $default  вывод с использованием правила 9 (list_of_asm_function)


состояние 13

   10 asm_function: asm_function_name . list_of_command

    ID   сдвиг, и переход в состояние 16
    ADD  сдвиг, и переход в состояние 19
    AND  сдвиг, и переход в состояние 20
    BSF  сдвиг, и переход в состояние 21
    BSR  сдвиг, и переход в состояние 22
    MOV  сдвиг, и переход в состояние 23

    list_of_command   переход в состояние 24
    asm_command_line  переход в состояние 25
    asm_command       переход в состояние 26
    label             переход в состояние 27


состояние 14

   21 quted_string: CHARACTER_STRING .

    $default  вывод с использованием правила 21 (quted_string)


состояние 15

    4 pragma_definition: pragma quted_string . NEW_LINE

    NEW_LINE  сдвиг, и переход в состояние 28


состояние 16

   22 label: ID .

    $default  вывод с использованием правила 22 (label)


состояние 17

   11 asm_function_name: DOT label . NEW_LINE

    NEW_LINE  сдвиг, и переход в состояние 29


состояние 18

    8 list_of_asm_function: list_of_asm_function asm_function .

    $default  вывод с использованием правила 8 (list_of_asm_function)


состояние 19

   16 asm_command: ADD . address COMMA address

    LROUND      сдвиг, и переход в состояние 30
    LSQUARE     сдвиг, и переход в состояние 31
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    address     переход в состояние 42
    expression  переход в состояние 43
    expr_0      переход в состояние 44
    expr_1      переход в состояние 45
    expr_2      переход в состояние 46
    expr_3      переход в состояние 47
    number      переход в состояние 48


состояние 20

   17 asm_command: AND . address COMMA address

    LROUND      сдвиг, и переход в состояние 30
    LSQUARE     сдвиг, и переход в состояние 31
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    address     переход в состояние 49
    expression  переход в состояние 43
    expr_0      переход в состояние 44
    expr_1      переход в состояние 45
    expr_2      переход в состояние 46
    expr_3      переход в состояние 47
    number      переход в состояние 48


состояние 21

   18 asm_command: BSF . address COMMA address

    LROUND      сдвиг, и переход в состояние 30
    LSQUARE     сдвиг, и переход в состояние 31
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    address     переход в состояние 50
    expression  переход в состояние 43
    expr_0      переход в состояние 44
    expr_1      переход в состояние 45
    expr_2      переход в состояние 46
    expr_3      переход в состояние 47
    number      переход в состояние 48


состояние 22

   19 asm_command: BSR . address COMMA address

    LROUND      сдвиг, и переход в состояние 30
    LSQUARE     сдвиг, и переход в состояние 31
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    address     переход в состояние 51
    expression  переход в состояние 43
    expr_0      переход в состояние 44
    expr_1      переход в состояние 45
    expr_2      переход в состояние 46
    expr_3      переход в состояние 47
    number      переход в состояние 48


состояние 23

   20 asm_command: MOV . address COMMA address

    LROUND      сдвиг, и переход в состояние 30
    LSQUARE     сдвиг, и переход в состояние 31
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    address     переход в состояние 52
    expression  переход в состояние 43
    expr_0      переход в состояние 44
    expr_1      переход в состояние 45
    expr_2      переход в состояние 46
    expr_3      переход в состояние 47
    number      переход в состояние 48


состояние 24

   10 asm_function: asm_function_name list_of_command .
   12 list_of_command: list_of_command . asm_command_line

    ID   сдвиг, и переход в состояние 16
    ADD  сдвиг, и переход в состояние 19
    AND  сдвиг, и переход в состояние 20
    BSF  сдвиг, и переход в состояние 21
    BSR  сдвиг, и переход в состояние 22
    MOV  сдвиг, и переход в состояние 23

    $default  вывод с использованием правила 10 (asm_function)

    asm_command_line  переход в состояние 53
    asm_command       переход в состояние 26
    label             переход в состояние 27


состояние 25

   13 list_of_command: asm_command_line .

    $default  вывод с использованием правила 13 (list_of_command)


состояние 26

   14 asm_command_line: asm_command . NEW_LINE

    NEW_LINE  сдвиг, и переход в состояние 54


состояние 27

   15 asm_command: label . COLON

    COLON  сдвиг, и переход в состояние 55


состояние 28

    4 pragma_definition: pragma quted_string NEW_LINE .

    $default  вывод с использованием правила 4 (pragma_definition)


состояние 29

   11 asm_function_name: DOT label NEW_LINE .

    $default  вывод с использованием правила 11 (asm_function_name)


состояние 30

   32 expr_2: LROUND . expr_0 RROUND

    LROUND      сдвиг, и переход в состояние 30
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    expr_0  переход в состояние 56
    expr_1  переход в состояние 45
    expr_2  переход в состояние 46
    expr_3  переход в состояние 47
    number  переход в состояние 48


состояние 31

   24 address: LSQUARE . expression RSQUARE

    LROUND      сдвиг, и переход в состояние 30
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    expression  переход в состояние 57
    expr_0      переход в состояние 44
    expr_1      переход в состояние 45
    expr_2      переход в состояние 46
    expr_3      переход в состояние 47
    number      переход в состояние 48


состояние 32

   42 number: INT_NUMBER .

    $default  вывод с использованием правила 42 (number)


состояние 33

   43 number: HEX_NUMBER .

    $default  вывод с использованием правила 43 (number)


состояние 34

   33 expr_3: R0 .

    $default  вывод с использованием правила 33 (expr_3)


состояние 35

   34 expr_3: R1 .

    $default  вывод с использованием правила 34 (expr_3)


состояние 36

   35 expr_3: R2 .

    $default  вывод с использованием правила 35 (expr_3)


состояние 37

   36 expr_3: R3 .

    $default  вывод с использованием правила 36 (expr_3)


состояние 38

   37 expr_3: RC .

    $default  вывод с использованием правила 37 (expr_3)


состояние 39

   38 expr_3: RF .

    $default  вывод с использованием правила 38 (expr_3)


состояние 40

   39 expr_3: IF .

    $default  вывод с использованием правила 39 (expr_3)


состояние 41

   40 expr_3: IR .

    $default  вывод с использованием правила 40 (expr_3)


состояние 42

   16 asm_command: ADD address . COMMA address

    COMMA  сдвиг, и переход в состояние 58


состояние 43

   23 address: expression .

    $default  вывод с использованием правила 23 (address)


состояние 44

   25 expression: expr_0 .
   27 expr_0: expr_0 . PLUS expr_1
   28       | expr_0 . MINUS expr_1

    PLUS   сдвиг, и переход в состояние 59
    MINUS  сдвиг, и переход в состояние 60

    $default  вывод с использованием правила 25 (expression)


состояние 45

   26 expr_0: expr_1 .
   30 expr_1: expr_1 . STAR expr_2

    STAR  сдвиг, и переход в состояние 61

    $default  вывод с использованием правила 26 (expr_0)


состояние 46

   29 expr_1: expr_2 .

    $default  вывод с использованием правила 29 (expr_1)


состояние 47

   31 expr_2: expr_3 .

    $default  вывод с использованием правила 31 (expr_2)


состояние 48

   41 expr_3: number .

    $default  вывод с использованием правила 41 (expr_3)


состояние 49

   17 asm_command: AND address . COMMA address

    COMMA  сдвиг, и переход в состояние 62


состояние 50

   18 asm_command: BSF address . COMMA address

    COMMA  сдвиг, и переход в состояние 63


состояние 51

   19 asm_command: BSR address . COMMA address

    COMMA  сдвиг, и переход в состояние 64


состояние 52

   20 asm_command: MOV address . COMMA address

    COMMA  сдвиг, и переход в состояние 65


состояние 53

   12 list_of_command: list_of_command asm_command_line .

    $default  вывод с использованием правила 12 (list_of_command)


состояние 54

   14 asm_command_line: asm_command NEW_LINE .

    $default  вывод с использованием правила 14 (asm_command_line)


состояние 55

   15 asm_command: label COLON .

    $default  вывод с использованием правила 15 (asm_command)


состояние 56

   27 expr_0: expr_0 . PLUS expr_1
   28       | expr_0 . MINUS expr_1
   32 expr_2: LROUND expr_0 . RROUND

    RROUND  сдвиг, и переход в состояние 66
    PLUS    сдвиг, и переход в состояние 59
    MINUS   сдвиг, и переход в состояние 60


состояние 57

   24 address: LSQUARE expression . RSQUARE

    RSQUARE  сдвиг, и переход в состояние 67


состояние 58

   16 asm_command: ADD address COMMA . address

    LROUND      сдвиг, и переход в состояние 30
    LSQUARE     сдвиг, и переход в состояние 31
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    address     переход в состояние 68
    expression  переход в состояние 43
    expr_0      переход в состояние 44
    expr_1      переход в состояние 45
    expr_2      переход в состояние 46
    expr_3      переход в состояние 47
    number      переход в состояние 48


состояние 59

   27 expr_0: expr_0 PLUS . expr_1

    LROUND      сдвиг, и переход в состояние 30
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    expr_1  переход в состояние 69
    expr_2  переход в состояние 46
    expr_3  переход в состояние 47
    number  переход в состояние 48


состояние 60

   28 expr_0: expr_0 MINUS . expr_1

    LROUND      сдвиг, и переход в состояние 30
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    expr_1  переход в состояние 70
    expr_2  переход в состояние 46
    expr_3  переход в состояние 47
    number  переход в состояние 48


состояние 61

   30 expr_1: expr_1 STAR . expr_2

    LROUND      сдвиг, и переход в состояние 30
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    expr_2  переход в состояние 71
    expr_3  переход в состояние 47
    number  переход в состояние 48


состояние 62

   17 asm_command: AND address COMMA . address

    LROUND      сдвиг, и переход в состояние 30
    LSQUARE     сдвиг, и переход в состояние 31
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    address     переход в состояние 72
    expression  переход в состояние 43
    expr_0      переход в состояние 44
    expr_1      переход в состояние 45
    expr_2      переход в состояние 46
    expr_3      переход в состояние 47
    number      переход в состояние 48


состояние 63

   18 asm_command: BSF address COMMA . address

    LROUND      сдвиг, и переход в состояние 30
    LSQUARE     сдвиг, и переход в состояние 31
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    address     переход в состояние 73
    expression  переход в состояние 43
    expr_0      переход в состояние 44
    expr_1      переход в состояние 45
    expr_2      переход в состояние 46
    expr_3      переход в состояние 47
    number      переход в состояние 48


состояние 64

   19 asm_command: BSR address COMMA . address

    LROUND      сдвиг, и переход в состояние 30
    LSQUARE     сдвиг, и переход в состояние 31
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    address     переход в состояние 74
    expression  переход в состояние 43
    expr_0      переход в состояние 44
    expr_1      переход в состояние 45
    expr_2      переход в состояние 46
    expr_3      переход в состояние 47
    number      переход в состояние 48


состояние 65

   20 asm_command: MOV address COMMA . address

    LROUND      сдвиг, и переход в состояние 30
    LSQUARE     сдвиг, и переход в состояние 31
    INT_NUMBER  сдвиг, и переход в состояние 32
    HEX_NUMBER  сдвиг, и переход в состояние 33
    R0          сдвиг, и переход в состояние 34
    R1          сдвиг, и переход в состояние 35
    R2          сдвиг, и переход в состояние 36
    R3          сдвиг, и переход в состояние 37
    RC          сдвиг, и переход в состояние 38
    RF          сдвиг, и переход в состояние 39
    IF          сдвиг, и переход в состояние 40
    IR          сдвиг, и переход в состояние 41

    address     переход в состояние 75
    expression  переход в состояние 43
    expr_0      переход в состояние 44
    expr_1      переход в состояние 45
    expr_2      переход в состояние 46
    expr_3      переход в состояние 47
    number      переход в состояние 48


состояние 66

   32 expr_2: LROUND expr_0 RROUND .

    $default  вывод с использованием правила 32 (expr_2)


состояние 67

   24 address: LSQUARE expression RSQUARE .

    $default  вывод с использованием правила 24 (address)


состояние 68

   16 asm_command: ADD address COMMA address .

    $default  вывод с использованием правила 16 (asm_command)


состояние 69

   27 expr_0: expr_0 PLUS expr_1 .
   30 expr_1: expr_1 . STAR expr_2

    STAR  сдвиг, и переход в состояние 61

    $default  вывод с использованием правила 27 (expr_0)


состояние 70

   28 expr_0: expr_0 MINUS expr_1 .
   30 expr_1: expr_1 . STAR expr_2

    STAR  сдвиг, и переход в состояние 61

    $default  вывод с использованием правила 28 (expr_0)


состояние 71

   30 expr_1: expr_1 STAR expr_2 .

    $default  вывод с использованием правила 30 (expr_1)


состояние 72

   17 asm_command: AND address COMMA address .

    $default  вывод с использованием правила 17 (asm_command)


состояние 73

   18 asm_command: BSF address COMMA address .

    $default  вывод с использованием правила 18 (asm_command)


состояние 74

   19 asm_command: BSR address COMMA address .

    $default  вывод с использованием правила 19 (asm_command)


состояние 75

   20 asm_command: MOV address COMMA address .

    $default  вывод с использованием правила 20 (asm_command)
