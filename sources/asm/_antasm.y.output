Grammar

    0 $accept: asm_file $end

    1 asm_file: newline asm_code
    2         | asm_code

    3 $@1: /* empty */

    4 asm_code: list_of_pragmas $@1 list_of_asm_functions

    5 list_of_pragmas: list_of_pragmas pragma_definition
    6                | pragma_definition

    7 pragma_definition: pragma quted_string newline

    8 pragma: PRAGMA_CLASS
    9       | PRAGMA_NAME
   10       | PRAGMA_VERSION

   11 define_declaration: list_of_defines

   12 list_of_defines: list_of_defines define_definition
   13                | define_definition

   14 define_definition: PRAGMA_DEFINE label number newline

   15 list_of_asm_functions: list_of_asm_functions asm_function
   16                      | asm_function

   17 asm_function: define_declaration asm_function_declaration
   18             | asm_function_declaration

   19 asm_function_declaration: asm_function_name list_of_commands

   20 asm_function_name: DOT label newline

   21 list_of_commands: list_of_commands asm_command_line
   22                 | asm_command_line

   23 asm_command_line: asm_command newline

   24 asm_command: label COLON
   25            | ADD address COMMA address
   26            | AND address COMMA address
   27            | DEC address
   28            | DIV address COMMA address
   29            | INC address
   30            | MOD address COMMA address
   31            | MUL address COMMA address
   32            | NEG address
   33            | NOT address
   34            | OR address COMMA address
   35            | SUB address COMMA address
   36            | XOR address COMMA address
   37            | MIN address COMMA address
   38            | MAX address COMMA address
   39            | BSF address COMMA address
   40            | BSR address COMMA address
   41            | BT address COMMA address
   42            | BTR address COMMA address
   43            | BTS address COMMA address
   44            | BTC address COMMA address
   45            | SHL address COMMA address
   46            | SHR address COMMA address
   47            | ROL address COMMA address
   48            | ROR address COMMA address
   49            | EQ address COMMA address
   50            | NEQ address COMMA address
   51            | GT address COMMA address
   52            | GE address COMMA address
   53            | LT address COMMA address
   54            | LE address COMMA address
   55            | TEST address COMMA address
   56            | JMP label
   57            | JZ label
   58            | JNZ label
   59            | JO label
   60            | JNO label
   61            | JCZ label
   62            | JCNZ label
   63            | LOOP label
   64            | MOV address COMMA address
   65            | CALL label
   66            | LEN address COMMA address
   67            | EXIT
   68            | LDTR address
   69            | LDFD address
   70            | LDEN address
   71            | LDFR address
   72            | CIDL address
   73            | CMOV address COMMA address
   74            | CATT address COMMA address
   75            | CTKF address COMMA address
   76            | CGVF address COMMA address
   77            | CEAT address
   78            | CPS
   79            | CPW
   80            | NOP

   81 address: expr_0
   82        | LSQUARE expr_0 RSQUARE

   83 expr_0: expr_1
   84       | expr_0 PLUS expr_1
   85       | expr_0 MINUS expr_1

   86 expr_1: expr_2
   87       | expr_1 STAR expr_2

   88 expr_2: expr_3
   89       | LROUND expr_0 RROUND

   90 expr_3: R0
   91       | R1
   92       | R2
   93       | R3
   94       | RC
   95       | RF
   96       | IF
   97       | IR
   98       | number
   99       | label

  100 number: INT_NUMBER
  101       | HEX_NUMBER

  102 newline: NEW_LINE

  103 quted_string: CHARACTER_STRING

  104 label: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
LROUND (258) 89
RROUND (259) 89
LSQUARE (260) 82
RSQUARE (261) 82
COMMA (262) 25 26 28 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 64 66 73 74 75 76
NEW_LINE (263) 102
COLON (264) 24
DOT (265) 20
INT_NUMBER (266) 100
HEX_NUMBER (267) 101
ID (268) 104
CHARACTER_STRING (269) 103
PRAGMA_NAME (270) 9
PRAGMA_VERSION (271) 10
PRAGMA_CLASS (272) 8
PRAGMA_DEFINE (273) 14
R0 (274) 90
R1 (275) 91
R2 (276) 92
R3 (277) 93
RC (278) 94
RF (279) 95
IF (280) 96
IR (281) 97
PLUS (282) 84
MINUS (283) 85
STAR (284) 87
ADD (285) 25
AND (286) 26
DEC (287) 27
DIV (288) 28
INC (289) 29
MOD (290) 30
MUL (291) 31
NEG (292) 32
NOT (293) 33
OR (294) 34
SUB (295) 35
XOR (296) 36
MIN (297) 37
MAX (298) 38
BSF (299) 39
BSR (300) 40
BT (301) 41
BTR (302) 42
BTS (303) 43
BTC (304) 44
SHL (305) 45
SHR (306) 46
ROL (307) 47
ROR (308) 48
EQ (309) 49
NEQ (310) 50
GT (311) 51
GE (312) 52
LT (313) 53
LE (314) 54
TEST (315) 55
JMP (316) 56
JZ (317) 57
JNZ (318) 58
JO (319) 59
JNO (320) 60
JCZ (321) 61
JCNZ (322) 62
LOOP (323) 63
MOV (324) 64
CALL (325) 65
LEN (326) 66
EXIT (327) 67
LDTR (328) 68
LDFD (329) 69
LDEN (330) 70
LDFR (331) 71
CIDL (332) 72
CMOV (333) 73
CATT (334) 74
CTKF (335) 75
CGVF (336) 76
CEAT (337) 77
CPS (338) 78
CPW (339) 79
NOP (340) 80


Nonterminals, with rules where they appear

$accept (86)
    on left: 0
asm_file (87)
    on left: 1 2, on right: 0
asm_code (88)
    on left: 4, on right: 1 2
$@1 (89)
    on left: 3, on right: 4
list_of_pragmas (90)
    on left: 5 6, on right: 4 5
pragma_definition (91)
    on left: 7, on right: 5 6
pragma (92)
    on left: 8 9 10, on right: 7
define_declaration (93)
    on left: 11, on right: 17
list_of_defines (94)
    on left: 12 13, on right: 11 12
define_definition (95)
    on left: 14, on right: 12 13
list_of_asm_functions (96)
    on left: 15 16, on right: 4 15
asm_function (97)
    on left: 17 18, on right: 15 16
asm_function_declaration (98)
    on left: 19, on right: 17 18
asm_function_name (99)
    on left: 20, on right: 19
list_of_commands (100)
    on left: 21 22, on right: 19 21
asm_command_line (101)
    on left: 23, on right: 21 22
asm_command (102)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
    42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
    63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80, on right:
    23
address (103)
    on left: 81 82, on right: 25 26 27 28 29 30 31 32 33 34 35 36 37
    38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 64 66 68
    69 70 71 72 73 74 75 76 77
expr_0 (104)
    on left: 83 84 85, on right: 81 82 84 85 89
expr_1 (105)
    on left: 86 87, on right: 83 84 85 87
expr_2 (106)
    on left: 88 89, on right: 86 87
expr_3 (107)
    on left: 90 91 92 93 94 95 96 97 98 99, on right: 88
number (108)
    on left: 100 101, on right: 14 98
newline (109)
    on left: 102, on right: 1 7 14 20 23
quted_string (110)
    on left: 103, on right: 7
label (111)
    on left: 104, on right: 14 20 24 56 57 58 59 60 61 62 63 65 99


state 0

    0 $accept: . asm_file $end

    NEW_LINE        shift, and go to state 1
    PRAGMA_NAME     shift, and go to state 2
    PRAGMA_VERSION  shift, and go to state 3
    PRAGMA_CLASS    shift, and go to state 4

    asm_file           go to state 5
    asm_code           go to state 6
    list_of_pragmas    go to state 7
    pragma_definition  go to state 8
    pragma             go to state 9
    newline            go to state 10


state 1

  102 newline: NEW_LINE .

    $default  reduce using rule 102 (newline)


state 2

    9 pragma: PRAGMA_NAME .

    $default  reduce using rule 9 (pragma)


state 3

   10 pragma: PRAGMA_VERSION .

    $default  reduce using rule 10 (pragma)


state 4

    8 pragma: PRAGMA_CLASS .

    $default  reduce using rule 8 (pragma)


state 5

    0 $accept: asm_file . $end

    $end  shift, and go to state 11


state 6

    2 asm_file: asm_code .

    $default  reduce using rule 2 (asm_file)


state 7

    4 asm_code: list_of_pragmas . $@1 list_of_asm_functions
    5 list_of_pragmas: list_of_pragmas . pragma_definition

    PRAGMA_NAME     shift, and go to state 2
    PRAGMA_VERSION  shift, and go to state 3
    PRAGMA_CLASS    shift, and go to state 4

    $default  reduce using rule 3 ($@1)

    $@1                go to state 12
    pragma_definition  go to state 13
    pragma             go to state 9


state 8

    6 list_of_pragmas: pragma_definition .

    $default  reduce using rule 6 (list_of_pragmas)


state 9

    7 pragma_definition: pragma . quted_string newline

    CHARACTER_STRING  shift, and go to state 14

    quted_string  go to state 15


state 10

    1 asm_file: newline . asm_code

    PRAGMA_NAME     shift, and go to state 2
    PRAGMA_VERSION  shift, and go to state 3
    PRAGMA_CLASS    shift, and go to state 4

    asm_code           go to state 16
    list_of_pragmas    go to state 7
    pragma_definition  go to state 8
    pragma             go to state 9


state 11

    0 $accept: asm_file $end .

    $default  accept


state 12

    4 asm_code: list_of_pragmas $@1 . list_of_asm_functions

    DOT            shift, and go to state 17
    PRAGMA_DEFINE  shift, and go to state 18

    define_declaration        go to state 19
    list_of_defines           go to state 20
    define_definition         go to state 21
    list_of_asm_functions     go to state 22
    asm_function              go to state 23
    asm_function_declaration  go to state 24
    asm_function_name         go to state 25


state 13

    5 list_of_pragmas: list_of_pragmas pragma_definition .

    $default  reduce using rule 5 (list_of_pragmas)


state 14

  103 quted_string: CHARACTER_STRING .

    $default  reduce using rule 103 (quted_string)


state 15

    7 pragma_definition: pragma quted_string . newline

    NEW_LINE  shift, and go to state 1

    newline  go to state 26


state 16

    1 asm_file: newline asm_code .

    $default  reduce using rule 1 (asm_file)


state 17

   20 asm_function_name: DOT . label newline

    ID  shift, and go to state 27

    label  go to state 28


state 18

   14 define_definition: PRAGMA_DEFINE . label number newline

    ID  shift, and go to state 27

    label  go to state 29


state 19

   17 asm_function: define_declaration . asm_function_declaration

    DOT  shift, and go to state 17

    asm_function_declaration  go to state 30
    asm_function_name         go to state 25


state 20

   11 define_declaration: list_of_defines .
   12 list_of_defines: list_of_defines . define_definition

    PRAGMA_DEFINE  shift, and go to state 18

    $default  reduce using rule 11 (define_declaration)

    define_definition  go to state 31


state 21

   13 list_of_defines: define_definition .

    $default  reduce using rule 13 (list_of_defines)


state 22

    4 asm_code: list_of_pragmas $@1 list_of_asm_functions .
   15 list_of_asm_functions: list_of_asm_functions . asm_function

    DOT            shift, and go to state 17
    PRAGMA_DEFINE  shift, and go to state 18

    $default  reduce using rule 4 (asm_code)

    define_declaration        go to state 19
    list_of_defines           go to state 20
    define_definition         go to state 21
    asm_function              go to state 32
    asm_function_declaration  go to state 24
    asm_function_name         go to state 25


state 23

   16 list_of_asm_functions: asm_function .

    $default  reduce using rule 16 (list_of_asm_functions)


state 24

   18 asm_function: asm_function_declaration .

    $default  reduce using rule 18 (asm_function)


state 25

   19 asm_function_declaration: asm_function_name . list_of_commands

    ID    shift, and go to state 27
    ADD   shift, and go to state 33
    AND   shift, and go to state 34
    DEC   shift, and go to state 35
    DIV   shift, and go to state 36
    INC   shift, and go to state 37
    MOD   shift, and go to state 38
    MUL   shift, and go to state 39
    NEG   shift, and go to state 40
    NOT   shift, and go to state 41
    OR    shift, and go to state 42
    SUB   shift, and go to state 43
    XOR   shift, and go to state 44
    MIN   shift, and go to state 45
    MAX   shift, and go to state 46
    BSF   shift, and go to state 47
    BSR   shift, and go to state 48
    BT    shift, and go to state 49
    BTR   shift, and go to state 50
    BTS   shift, and go to state 51
    BTC   shift, and go to state 52
    SHL   shift, and go to state 53
    SHR   shift, and go to state 54
    ROL   shift, and go to state 55
    ROR   shift, and go to state 56
    EQ    shift, and go to state 57
    NEQ   shift, and go to state 58
    GT    shift, and go to state 59
    GE    shift, and go to state 60
    LT    shift, and go to state 61
    LE    shift, and go to state 62
    TEST  shift, and go to state 63
    JMP   shift, and go to state 64
    JZ    shift, and go to state 65
    JNZ   shift, and go to state 66
    JO    shift, and go to state 67
    JNO   shift, and go to state 68
    JCZ   shift, and go to state 69
    JCNZ  shift, and go to state 70
    LOOP  shift, and go to state 71
    MOV   shift, and go to state 72
    CALL  shift, and go to state 73
    LEN   shift, and go to state 74
    EXIT  shift, and go to state 75
    LDTR  shift, and go to state 76
    LDFD  shift, and go to state 77
    LDEN  shift, and go to state 78
    LDFR  shift, and go to state 79
    CIDL  shift, and go to state 80
    CMOV  shift, and go to state 81
    CATT  shift, and go to state 82
    CTKF  shift, and go to state 83
    CGVF  shift, and go to state 84
    CEAT  shift, and go to state 85
    CPS   shift, and go to state 86
    CPW   shift, and go to state 87
    NOP   shift, and go to state 88

    list_of_commands  go to state 89
    asm_command_line  go to state 90
    asm_command       go to state 91
    label             go to state 92


state 26

    7 pragma_definition: pragma quted_string newline .

    $default  reduce using rule 7 (pragma_definition)


state 27

  104 label: ID .

    $default  reduce using rule 104 (label)


state 28

   20 asm_function_name: DOT label . newline

    NEW_LINE  shift, and go to state 1

    newline  go to state 93


state 29

   14 define_definition: PRAGMA_DEFINE label . number newline

    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95

    number  go to state 96


state 30

   17 asm_function: define_declaration asm_function_declaration .

    $default  reduce using rule 17 (asm_function)


state 31

   12 list_of_defines: list_of_defines define_definition .

    $default  reduce using rule 12 (list_of_defines)


state 32

   15 list_of_asm_functions: list_of_asm_functions asm_function .

    $default  reduce using rule 15 (list_of_asm_functions)


state 33

   25 asm_command: ADD . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 107
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 34

   26 asm_command: AND . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 114
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 35

   27 asm_command: DEC . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 115
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 36

   28 asm_command: DIV . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 116
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 37

   29 asm_command: INC . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 117
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 38

   30 asm_command: MOD . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 118
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 39

   31 asm_command: MUL . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 119
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 40

   32 asm_command: NEG . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 120
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 41

   33 asm_command: NOT . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 121
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 42

   34 asm_command: OR . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 122
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 43

   35 asm_command: SUB . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 123
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 44

   36 asm_command: XOR . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 124
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 45

   37 asm_command: MIN . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 125
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 46

   38 asm_command: MAX . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 126
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 47

   39 asm_command: BSF . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 127
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 48

   40 asm_command: BSR . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 128
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 49

   41 asm_command: BT . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 129
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 50

   42 asm_command: BTR . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 130
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 51

   43 asm_command: BTS . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 131
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 52

   44 asm_command: BTC . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 132
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 53

   45 asm_command: SHL . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 133
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 54

   46 asm_command: SHR . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 134
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 55

   47 asm_command: ROL . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 135
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 56

   48 asm_command: ROR . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 136
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 57

   49 asm_command: EQ . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 137
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 58

   50 asm_command: NEQ . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 138
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 59

   51 asm_command: GT . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 139
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 60

   52 asm_command: GE . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 140
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 61

   53 asm_command: LT . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 141
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 62

   54 asm_command: LE . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 142
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 63

   55 asm_command: TEST . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 143
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 64

   56 asm_command: JMP . label

    ID  shift, and go to state 27

    label  go to state 144


state 65

   57 asm_command: JZ . label

    ID  shift, and go to state 27

    label  go to state 145


state 66

   58 asm_command: JNZ . label

    ID  shift, and go to state 27

    label  go to state 146


state 67

   59 asm_command: JO . label

    ID  shift, and go to state 27

    label  go to state 147


state 68

   60 asm_command: JNO . label

    ID  shift, and go to state 27

    label  go to state 148


state 69

   61 asm_command: JCZ . label

    ID  shift, and go to state 27

    label  go to state 149


state 70

   62 asm_command: JCNZ . label

    ID  shift, and go to state 27

    label  go to state 150


state 71

   63 asm_command: LOOP . label

    ID  shift, and go to state 27

    label  go to state 151


state 72

   64 asm_command: MOV . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 152
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 73

   65 asm_command: CALL . label

    ID  shift, and go to state 27

    label  go to state 153


state 74

   66 asm_command: LEN . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 154
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 75

   67 asm_command: EXIT .

    $default  reduce using rule 67 (asm_command)


state 76

   68 asm_command: LDTR . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 155
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 77

   69 asm_command: LDFD . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 156
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 78

   70 asm_command: LDEN . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 157
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 79

   71 asm_command: LDFR . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 158
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 80

   72 asm_command: CIDL . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 159
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 81

   73 asm_command: CMOV . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 160
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 82

   74 asm_command: CATT . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 161
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 83

   75 asm_command: CTKF . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 162
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 84

   76 asm_command: CGVF . address COMMA address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 163
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 85

   77 asm_command: CEAT . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 164
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 86

   78 asm_command: CPS .

    $default  reduce using rule 78 (asm_command)


state 87

   79 asm_command: CPW .

    $default  reduce using rule 79 (asm_command)


state 88

   80 asm_command: NOP .

    $default  reduce using rule 80 (asm_command)


state 89

   19 asm_function_declaration: asm_function_name list_of_commands .
   21 list_of_commands: list_of_commands . asm_command_line

    ID    shift, and go to state 27
    ADD   shift, and go to state 33
    AND   shift, and go to state 34
    DEC   shift, and go to state 35
    DIV   shift, and go to state 36
    INC   shift, and go to state 37
    MOD   shift, and go to state 38
    MUL   shift, and go to state 39
    NEG   shift, and go to state 40
    NOT   shift, and go to state 41
    OR    shift, and go to state 42
    SUB   shift, and go to state 43
    XOR   shift, and go to state 44
    MIN   shift, and go to state 45
    MAX   shift, and go to state 46
    BSF   shift, and go to state 47
    BSR   shift, and go to state 48
    BT    shift, and go to state 49
    BTR   shift, and go to state 50
    BTS   shift, and go to state 51
    BTC   shift, and go to state 52
    SHL   shift, and go to state 53
    SHR   shift, and go to state 54
    ROL   shift, and go to state 55
    ROR   shift, and go to state 56
    EQ    shift, and go to state 57
    NEQ   shift, and go to state 58
    GT    shift, and go to state 59
    GE    shift, and go to state 60
    LT    shift, and go to state 61
    LE    shift, and go to state 62
    TEST  shift, and go to state 63
    JMP   shift, and go to state 64
    JZ    shift, and go to state 65
    JNZ   shift, and go to state 66
    JO    shift, and go to state 67
    JNO   shift, and go to state 68
    JCZ   shift, and go to state 69
    JCNZ  shift, and go to state 70
    LOOP  shift, and go to state 71
    MOV   shift, and go to state 72
    CALL  shift, and go to state 73
    LEN   shift, and go to state 74
    EXIT  shift, and go to state 75
    LDTR  shift, and go to state 76
    LDFD  shift, and go to state 77
    LDEN  shift, and go to state 78
    LDFR  shift, and go to state 79
    CIDL  shift, and go to state 80
    CMOV  shift, and go to state 81
    CATT  shift, and go to state 82
    CTKF  shift, and go to state 83
    CGVF  shift, and go to state 84
    CEAT  shift, and go to state 85
    CPS   shift, and go to state 86
    CPW   shift, and go to state 87
    NOP   shift, and go to state 88

    $default  reduce using rule 19 (asm_function_declaration)

    asm_command_line  go to state 165
    asm_command       go to state 91
    label             go to state 92


state 90

   22 list_of_commands: asm_command_line .

    $default  reduce using rule 22 (list_of_commands)


state 91

   23 asm_command_line: asm_command . newline

    NEW_LINE  shift, and go to state 1

    newline  go to state 166


state 92

   24 asm_command: label . COLON

    COLON  shift, and go to state 167


state 93

   20 asm_function_name: DOT label newline .

    $default  reduce using rule 20 (asm_function_name)


state 94

  100 number: INT_NUMBER .

    $default  reduce using rule 100 (number)


state 95

  101 number: HEX_NUMBER .

    $default  reduce using rule 101 (number)


state 96

   14 define_definition: PRAGMA_DEFINE label number . newline

    NEW_LINE  shift, and go to state 1

    newline  go to state 168


state 97

   89 expr_2: LROUND . expr_0 RROUND

    LROUND      shift, and go to state 97
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    expr_0  go to state 169
    expr_1  go to state 109
    expr_2  go to state 110
    expr_3  go to state 111
    number  go to state 112
    label   go to state 113


state 98

   82 address: LSQUARE . expr_0 RSQUARE

    LROUND      shift, and go to state 97
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    expr_0  go to state 170
    expr_1  go to state 109
    expr_2  go to state 110
    expr_3  go to state 111
    number  go to state 112
    label   go to state 113


state 99

   90 expr_3: R0 .

    $default  reduce using rule 90 (expr_3)


state 100

   91 expr_3: R1 .

    $default  reduce using rule 91 (expr_3)


state 101

   92 expr_3: R2 .

    $default  reduce using rule 92 (expr_3)


state 102

   93 expr_3: R3 .

    $default  reduce using rule 93 (expr_3)


state 103

   94 expr_3: RC .

    $default  reduce using rule 94 (expr_3)


state 104

   95 expr_3: RF .

    $default  reduce using rule 95 (expr_3)


state 105

   96 expr_3: IF .

    $default  reduce using rule 96 (expr_3)


state 106

   97 expr_3: IR .

    $default  reduce using rule 97 (expr_3)


state 107

   25 asm_command: ADD address . COMMA address

    COMMA  shift, and go to state 171


state 108

   81 address: expr_0 .
   84 expr_0: expr_0 . PLUS expr_1
   85       | expr_0 . MINUS expr_1

    PLUS   shift, and go to state 172
    MINUS  shift, and go to state 173

    $default  reduce using rule 81 (address)


state 109

   83 expr_0: expr_1 .
   87 expr_1: expr_1 . STAR expr_2

    STAR  shift, and go to state 174

    $default  reduce using rule 83 (expr_0)


state 110

   86 expr_1: expr_2 .

    $default  reduce using rule 86 (expr_1)


state 111

   88 expr_2: expr_3 .

    $default  reduce using rule 88 (expr_2)


state 112

   98 expr_3: number .

    $default  reduce using rule 98 (expr_3)


state 113

   99 expr_3: label .

    $default  reduce using rule 99 (expr_3)


state 114

   26 asm_command: AND address . COMMA address

    COMMA  shift, and go to state 175


state 115

   27 asm_command: DEC address .

    $default  reduce using rule 27 (asm_command)


state 116

   28 asm_command: DIV address . COMMA address

    COMMA  shift, and go to state 176


state 117

   29 asm_command: INC address .

    $default  reduce using rule 29 (asm_command)


state 118

   30 asm_command: MOD address . COMMA address

    COMMA  shift, and go to state 177


state 119

   31 asm_command: MUL address . COMMA address

    COMMA  shift, and go to state 178


state 120

   32 asm_command: NEG address .

    $default  reduce using rule 32 (asm_command)


state 121

   33 asm_command: NOT address .

    $default  reduce using rule 33 (asm_command)


state 122

   34 asm_command: OR address . COMMA address

    COMMA  shift, and go to state 179


state 123

   35 asm_command: SUB address . COMMA address

    COMMA  shift, and go to state 180


state 124

   36 asm_command: XOR address . COMMA address

    COMMA  shift, and go to state 181


state 125

   37 asm_command: MIN address . COMMA address

    COMMA  shift, and go to state 182


state 126

   38 asm_command: MAX address . COMMA address

    COMMA  shift, and go to state 183


state 127

   39 asm_command: BSF address . COMMA address

    COMMA  shift, and go to state 184


state 128

   40 asm_command: BSR address . COMMA address

    COMMA  shift, and go to state 185


state 129

   41 asm_command: BT address . COMMA address

    COMMA  shift, and go to state 186


state 130

   42 asm_command: BTR address . COMMA address

    COMMA  shift, and go to state 187


state 131

   43 asm_command: BTS address . COMMA address

    COMMA  shift, and go to state 188


state 132

   44 asm_command: BTC address . COMMA address

    COMMA  shift, and go to state 189


state 133

   45 asm_command: SHL address . COMMA address

    COMMA  shift, and go to state 190


state 134

   46 asm_command: SHR address . COMMA address

    COMMA  shift, and go to state 191


state 135

   47 asm_command: ROL address . COMMA address

    COMMA  shift, and go to state 192


state 136

   48 asm_command: ROR address . COMMA address

    COMMA  shift, and go to state 193


state 137

   49 asm_command: EQ address . COMMA address

    COMMA  shift, and go to state 194


state 138

   50 asm_command: NEQ address . COMMA address

    COMMA  shift, and go to state 195


state 139

   51 asm_command: GT address . COMMA address

    COMMA  shift, and go to state 196


state 140

   52 asm_command: GE address . COMMA address

    COMMA  shift, and go to state 197


state 141

   53 asm_command: LT address . COMMA address

    COMMA  shift, and go to state 198


state 142

   54 asm_command: LE address . COMMA address

    COMMA  shift, and go to state 199


state 143

   55 asm_command: TEST address . COMMA address

    COMMA  shift, and go to state 200


state 144

   56 asm_command: JMP label .

    $default  reduce using rule 56 (asm_command)


state 145

   57 asm_command: JZ label .

    $default  reduce using rule 57 (asm_command)


state 146

   58 asm_command: JNZ label .

    $default  reduce using rule 58 (asm_command)


state 147

   59 asm_command: JO label .

    $default  reduce using rule 59 (asm_command)


state 148

   60 asm_command: JNO label .

    $default  reduce using rule 60 (asm_command)


state 149

   61 asm_command: JCZ label .

    $default  reduce using rule 61 (asm_command)


state 150

   62 asm_command: JCNZ label .

    $default  reduce using rule 62 (asm_command)


state 151

   63 asm_command: LOOP label .

    $default  reduce using rule 63 (asm_command)


state 152

   64 asm_command: MOV address . COMMA address

    COMMA  shift, and go to state 201


state 153

   65 asm_command: CALL label .

    $default  reduce using rule 65 (asm_command)


state 154

   66 asm_command: LEN address . COMMA address

    COMMA  shift, and go to state 202


state 155

   68 asm_command: LDTR address .

    $default  reduce using rule 68 (asm_command)


state 156

   69 asm_command: LDFD address .

    $default  reduce using rule 69 (asm_command)


state 157

   70 asm_command: LDEN address .

    $default  reduce using rule 70 (asm_command)


state 158

   71 asm_command: LDFR address .

    $default  reduce using rule 71 (asm_command)


state 159

   72 asm_command: CIDL address .

    $default  reduce using rule 72 (asm_command)


state 160

   73 asm_command: CMOV address . COMMA address

    COMMA  shift, and go to state 203


state 161

   74 asm_command: CATT address . COMMA address

    COMMA  shift, and go to state 204


state 162

   75 asm_command: CTKF address . COMMA address

    COMMA  shift, and go to state 205


state 163

   76 asm_command: CGVF address . COMMA address

    COMMA  shift, and go to state 206


state 164

   77 asm_command: CEAT address .

    $default  reduce using rule 77 (asm_command)


state 165

   21 list_of_commands: list_of_commands asm_command_line .

    $default  reduce using rule 21 (list_of_commands)


state 166

   23 asm_command_line: asm_command newline .

    $default  reduce using rule 23 (asm_command_line)


state 167

   24 asm_command: label COLON .

    $default  reduce using rule 24 (asm_command)


state 168

   14 define_definition: PRAGMA_DEFINE label number newline .

    $default  reduce using rule 14 (define_definition)


state 169

   84 expr_0: expr_0 . PLUS expr_1
   85       | expr_0 . MINUS expr_1
   89 expr_2: LROUND expr_0 . RROUND

    RROUND  shift, and go to state 207
    PLUS    shift, and go to state 172
    MINUS   shift, and go to state 173


state 170

   82 address: LSQUARE expr_0 . RSQUARE
   84 expr_0: expr_0 . PLUS expr_1
   85       | expr_0 . MINUS expr_1

    RSQUARE  shift, and go to state 208
    PLUS     shift, and go to state 172
    MINUS    shift, and go to state 173


state 171

   25 asm_command: ADD address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 209
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 172

   84 expr_0: expr_0 PLUS . expr_1

    LROUND      shift, and go to state 97
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    expr_1  go to state 210
    expr_2  go to state 110
    expr_3  go to state 111
    number  go to state 112
    label   go to state 113


state 173

   85 expr_0: expr_0 MINUS . expr_1

    LROUND      shift, and go to state 97
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    expr_1  go to state 211
    expr_2  go to state 110
    expr_3  go to state 111
    number  go to state 112
    label   go to state 113


state 174

   87 expr_1: expr_1 STAR . expr_2

    LROUND      shift, and go to state 97
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    expr_2  go to state 212
    expr_3  go to state 111
    number  go to state 112
    label   go to state 113


state 175

   26 asm_command: AND address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 213
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 176

   28 asm_command: DIV address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 214
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 177

   30 asm_command: MOD address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 215
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 178

   31 asm_command: MUL address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 216
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 179

   34 asm_command: OR address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 217
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 180

   35 asm_command: SUB address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 218
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 181

   36 asm_command: XOR address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 219
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 182

   37 asm_command: MIN address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 220
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 183

   38 asm_command: MAX address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 221
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 184

   39 asm_command: BSF address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 222
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 185

   40 asm_command: BSR address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 223
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 186

   41 asm_command: BT address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 224
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 187

   42 asm_command: BTR address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 225
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 188

   43 asm_command: BTS address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 226
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 189

   44 asm_command: BTC address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 227
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 190

   45 asm_command: SHL address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 228
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 191

   46 asm_command: SHR address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 229
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 192

   47 asm_command: ROL address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 230
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 193

   48 asm_command: ROR address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 231
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 194

   49 asm_command: EQ address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 232
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 195

   50 asm_command: NEQ address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 233
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 196

   51 asm_command: GT address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 234
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 197

   52 asm_command: GE address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 235
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 198

   53 asm_command: LT address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 236
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 199

   54 asm_command: LE address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 237
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 200

   55 asm_command: TEST address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 238
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 201

   64 asm_command: MOV address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 239
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 202

   66 asm_command: LEN address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 240
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 203

   73 asm_command: CMOV address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 241
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 204

   74 asm_command: CATT address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 242
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 205

   75 asm_command: CTKF address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 243
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 206

   76 asm_command: CGVF address COMMA . address

    LROUND      shift, and go to state 97
    LSQUARE     shift, and go to state 98
    INT_NUMBER  shift, and go to state 94
    HEX_NUMBER  shift, and go to state 95
    ID          shift, and go to state 27
    R0          shift, and go to state 99
    R1          shift, and go to state 100
    R2          shift, and go to state 101
    R3          shift, and go to state 102
    RC          shift, and go to state 103
    RF          shift, and go to state 104
    IF          shift, and go to state 105
    IR          shift, and go to state 106

    address  go to state 244
    expr_0   go to state 108
    expr_1   go to state 109
    expr_2   go to state 110
    expr_3   go to state 111
    number   go to state 112
    label    go to state 113


state 207

   89 expr_2: LROUND expr_0 RROUND .

    $default  reduce using rule 89 (expr_2)


state 208

   82 address: LSQUARE expr_0 RSQUARE .

    $default  reduce using rule 82 (address)


state 209

   25 asm_command: ADD address COMMA address .

    $default  reduce using rule 25 (asm_command)


state 210

   84 expr_0: expr_0 PLUS expr_1 .
   87 expr_1: expr_1 . STAR expr_2

    STAR  shift, and go to state 174

    $default  reduce using rule 84 (expr_0)


state 211

   85 expr_0: expr_0 MINUS expr_1 .
   87 expr_1: expr_1 . STAR expr_2

    STAR  shift, and go to state 174

    $default  reduce using rule 85 (expr_0)


state 212

   87 expr_1: expr_1 STAR expr_2 .

    $default  reduce using rule 87 (expr_1)


state 213

   26 asm_command: AND address COMMA address .

    $default  reduce using rule 26 (asm_command)


state 214

   28 asm_command: DIV address COMMA address .

    $default  reduce using rule 28 (asm_command)


state 215

   30 asm_command: MOD address COMMA address .

    $default  reduce using rule 30 (asm_command)


state 216

   31 asm_command: MUL address COMMA address .

    $default  reduce using rule 31 (asm_command)


state 217

   34 asm_command: OR address COMMA address .

    $default  reduce using rule 34 (asm_command)


state 218

   35 asm_command: SUB address COMMA address .

    $default  reduce using rule 35 (asm_command)


state 219

   36 asm_command: XOR address COMMA address .

    $default  reduce using rule 36 (asm_command)


state 220

   37 asm_command: MIN address COMMA address .

    $default  reduce using rule 37 (asm_command)


state 221

   38 asm_command: MAX address COMMA address .

    $default  reduce using rule 38 (asm_command)


state 222

   39 asm_command: BSF address COMMA address .

    $default  reduce using rule 39 (asm_command)


state 223

   40 asm_command: BSR address COMMA address .

    $default  reduce using rule 40 (asm_command)


state 224

   41 asm_command: BT address COMMA address .

    $default  reduce using rule 41 (asm_command)


state 225

   42 asm_command: BTR address COMMA address .

    $default  reduce using rule 42 (asm_command)


state 226

   43 asm_command: BTS address COMMA address .

    $default  reduce using rule 43 (asm_command)


state 227

   44 asm_command: BTC address COMMA address .

    $default  reduce using rule 44 (asm_command)


state 228

   45 asm_command: SHL address COMMA address .

    $default  reduce using rule 45 (asm_command)


state 229

   46 asm_command: SHR address COMMA address .

    $default  reduce using rule 46 (asm_command)


state 230

   47 asm_command: ROL address COMMA address .

    $default  reduce using rule 47 (asm_command)


state 231

   48 asm_command: ROR address COMMA address .

    $default  reduce using rule 48 (asm_command)


state 232

   49 asm_command: EQ address COMMA address .

    $default  reduce using rule 49 (asm_command)


state 233

   50 asm_command: NEQ address COMMA address .

    $default  reduce using rule 50 (asm_command)


state 234

   51 asm_command: GT address COMMA address .

    $default  reduce using rule 51 (asm_command)


state 235

   52 asm_command: GE address COMMA address .

    $default  reduce using rule 52 (asm_command)


state 236

   53 asm_command: LT address COMMA address .

    $default  reduce using rule 53 (asm_command)


state 237

   54 asm_command: LE address COMMA address .

    $default  reduce using rule 54 (asm_command)


state 238

   55 asm_command: TEST address COMMA address .

    $default  reduce using rule 55 (asm_command)


state 239

   64 asm_command: MOV address COMMA address .

    $default  reduce using rule 64 (asm_command)


state 240

   66 asm_command: LEN address COMMA address .

    $default  reduce using rule 66 (asm_command)


state 241

   73 asm_command: CMOV address COMMA address .

    $default  reduce using rule 73 (asm_command)


state 242

   74 asm_command: CATT address COMMA address .

    $default  reduce using rule 74 (asm_command)


state 243

   75 asm_command: CTKF address COMMA address .

    $default  reduce using rule 75 (asm_command)


state 244

   76 asm_command: CGVF address COMMA address .

    $default  reduce using rule 76 (asm_command)
